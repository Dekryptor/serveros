#!/bin/bash

# Variables

execdir=/usr/libexec/xgrid
piddir=/var/run
launchd_dir=/System/Library/LaunchDaemons
launchd_basepath=$launchd_dir/com.apple

agent_name=xgridagentd
controller_name=xgridcontrollerd

# If just status, skip all checks

if [ $1 = "status" ]; then
    /bin/ps axc | grep $agent_name
    /bin/ps axc | grep $controller_name
    exit
fi

# Usage message and error checking

usage="Usage: `basename $0` {status|c[ontroller]|a[gent]} {on|off|start|stop|restart}"


if [ $# != 2 ]; then
    echo $usage
    exit 10
fi

if [ "$(whoami)" != 'root' ]; then
    echo "Error: `basename $0` must be run via sudo or root"
    exit 20
fi

if [ ! -d $execdir ]; then
    echo "Error: Executable directory '"$execdir"' not present"
    exit 30
fi

if [ ! -d $piddir ]; then
    echo "Error: Process directory '"$piddir"' not present"
    exit 31
fi

#if [ `grep -c $controller_tag $config` == "0" ]; then
#    echo "Warning: adding missing '"$controller_tag"=-NO-' to $config"
#    echo "$controller_tag=-NO-" >> $config
#fi

#if [ `grep -c $agent_tag $config` == "0" ]; then
#    echo "Warning: adding missing '"$agent_tag"=-NO-' to $config"
#    echo "$agent_tag=-NO-" >> $config
#fi


# Set Target

case $1 in
  c*)
    name=$controller_name
    tag=$controller_tag
    ;;
  a*)
    name=$agent_name
    tag=$agent_tag
    ;;
  *)
    echo "Target '"$1"' not recognized"
    echo $usage
    exit 1
esac

# Execute action

case $2 in
  on)
    /usr/bin/defaults write $launchd_basepath.$name Disabled '<false/>'
    chmod 644 $launchd_basepath.$name.plist
    ;;
  off)
    /usr/bin/defaults write $launchd_basepath.$name Disabled '<true/>'
    chmod 644 $launchd_basepath.$name.plist
    ;;
  start)
    n_old=`/bin/ps axc|grep -v 'grep'|grep -c $name`
    if [ $n_old -gt 0 ]; then
        echo "Warning: $n_old copies of $name already running. Use 'restart' instead."
        exit 1
    fi
    # force daemon to be on
    /usr/bin/defaults write $launchd_basepath.$name Disabled '<false/>'
    chmod 644 $launchd_basepath.$name.plist
    /bin/launchctl -l $launchd_basepath.$name.plist
    n_new=`/bin/ps axc|grep -v 'grep'|grep -c $name`
    if [ $n_old -ge $n_new ]; then
        echo "Error: failed to launch $name"
    fi
    ;;
  stop)
    pidfile=$piddir/${name}.pid
    if [ -r $pidfile ]; then
      pid=`/bin/cat $pidfile`
    else
      pid=`/bin/ps axc|/usr/bin/awk '/'$name'/ {print $1}'|tr '\n' ' ' `
    fi
    if [ ! -z "$pid" ]; then
        /bin/launchctl -u $launchd_basepath.$name.plist
        /bin/rm -f $pidfile
    else
        echo "Error: process '"$name"' not currently running"
    fi
    ;;
  restart)
    # this will kill the process, and launchd will restart it.
    killall -TERM $name
    n=`/bin/ps axc|/usr/bin/grep -v 'grep'|/usr/bin/grep -c $name`
    if [ $n -lt 1 ]; then
        echo "Error: failed to launch $name"
    fi
    ;;
  status)
    /bin/ps axc | grep -i $name
    ;;
  *)
    echo "Action '"$2"' not recognized"
    echo $usage
    exit 2
esac
