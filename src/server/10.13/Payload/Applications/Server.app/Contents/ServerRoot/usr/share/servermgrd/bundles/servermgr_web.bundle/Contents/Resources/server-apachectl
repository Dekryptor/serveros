#!/bin/sh
#
SERVER_INSTALL_PATH_PREFIX="/Applications/Server.app/Contents/ServerRoot"
SERVERCTL="$SERVER_INSTALL_PATH_PREFIX/usr/sbin/serverctl"
LAUNCHD_KEY="com.apple.server.httpd"
HTTPD_PATH="/usr/sbin/httpd"
CONFIG_PATH="/Library/Server/Web/Config/apache2/httpd_server_app.conf"
ARGV="$@"
PID_PATH="/var/run/server-httpd.pid"

check_uid() {
    if [ $UID != 0 ]; then
        echo This operation requires root.
        exit 1
    fi
}

run_serverctl() {
    check_uid
    $SERVERCTL $@ 1> /dev/null
}


ERROR=0
if [ "x$ARGV" = "x" ] ; then 
    ARGV="-h"
fi

case $ARGV in
start)
    check_uid
    FOUND=`ps ux | grep httpd | grep root | grep httpd_server_app | wc -l`
    if [ $FOUND = 0  ] ; then
        rm -df $PID_PATH
    fi
    run_serverctl enable service=$LAUNCHD_KEY
    ERROR=$?
    ;;
stop)
    run_serverctl disable service=$LAUNCHD_KEY
    ERROR=$?
    ;;
restart|graceful)
    run_serverctl disable service=$LAUNCHD_KEY
    rm -df $PID_PATH 
    run_serverctl enable service=$LAUNCHD_KEY
    ERROR=$?
    ;;
configtest)
    export SERVER_INSTALL_PATH_PREFIX=$SERVER_INSTALL_PATH_PREFIX
    $HTTPD_PATH -f $CONFIG_PATH -t
    ERROR=$?
    ;;
status|fullstatus)
    echo Status not available. 
    ;;
*)
    export SERVER_INSTALL_PATH_PREFIX=$SERVER_INSTALL_PATH_PREFIX
    $HTTPD_PATH -f $CONFIG_PATH $ARGV
    ERROR=$?
esac

exit $ERROR

