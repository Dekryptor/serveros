.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mail::SpamAssassin::Plugin::URILocalBL 3"
.TH Mail::SpamAssassin::Plugin::URILocalBL 3 "2016-06-09" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
URILocalBL \- blacklist URIs using local information (ISP names, address lists, and country codes)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This plugin creates some new rule test types, such as \*(L"uri_block_cc\*(R",
\&\*(L"uri_block_cidr\*(R", and \*(L"uri_block_isp\*(R".  These rules apply to the URIs
found in the \s-1HTML\s0 portion of a message, i.e. <a href=...> markup.
.PP
.Vb 1
\&  loadplugin    Mail::SpamAssassin::Plugin::URILocalBL
.Ve
.PP
Why local blacklisting? There are a few excellent, effective, and
well-maintained \s-1DNSBL\s0's out there. But they have several drawbacks:
.IP "\(bu" 2
blacklists can cover tens of thousands of entries, and you can't select which ones you use;
.IP "\(bu" 2
verifying that it's correctly configured can be non-trivial;
.IP "\(bu" 2
new blacklisting entries may take a while to be detected and entered, so it's not instantaneous.
.PP
Sometimes all you want is a quick, easy, and very surgical blacklisting of
a particular site or a particular \s-1ISP.\s0 This plugin is defined for that
exact usage case.
.SH "RULE DEFINITIONS AND PRIVILEGED SETTINGS"
.IX Header "RULE DEFINITIONS AND PRIVILEGED SETTINGS"
The format for defining a rule is as follows:
.PP
.Vb 1
\&  uri_block_cc SYMBOLIC_TEST_NAME cc1 cc2 cc3 cc4
.Ve
.PP
or:
.PP
.Vb 1
\&  uri_block_cidr SYMBOLIC_TEST_NAME a.a.a.a b.b.b.b/cc d.d.d.d\-e.e.e.e
.Ve
.PP
or:
.PP
.Vb 1
\&  uri_block_isp SYMBOLIC_TEST_NAME "DataRancid" "McCarrier" "Phishers\-r\-Us"
.Ve
.PP
Example rule for matching a \s-1URI\s0 in China:
.PP
.Vb 1
\&  uri_block_cc TEST1 cn
.Ve
.PP
This would block the \s-1URL\s0 http://www.baidu.com/index.htm.  Similarly, to
match a Spam-haven netblock:
.PP
.Vb 1
\&  uri_block_cidr TEST2 65.181.64.0/18
.Ve
.PP
would match a netblock where several phishing sites were recently hosted.
.PP
And to block all \s-1CIDR\s0 blocks registered to an \s-1ISP,\s0 one might use:
.PP
.Vb 1
\&  uri_block_isp TEST3 "ColoCrossing"
.Ve
.PP
if one didn't trust \s-1URL\s0's pointing to that organization's clients.  Lastly,
if there's a country that you want to block but there's an explicit host
you wish to exempt from that blacklist, you can use:
.PP
.Vb 1
\&  uri_block_exclude TEST1 www.baidu.com
.Ve
.PP
if you wish to exempt \s-1URL\s0's referring to this host. The same syntax is
applicable to \s-1CIDR\s0 and \s-1ISP\s0 blocks as well.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
The Country-Code based filtering requires the Geo::IP module, which uses
either the fremium GeoLiteCountry database, or the commercial version of it
called GeoIP from MaxMind.com.
.PP
The \s-1ISP\s0 based filtering requires the same module, plus the GeoIPISP database.
There is no fremium version of this database, so commercial licensing is
required.
