# Profile Manager has three main services, each on different URIs
#
# 1) The web admin, at /profilemanager and /devicemanagement/console (static files)
#    and /devicemanagement/webapi for AJAX requests to the backend Rails code.
# 2) The user portal, at /mydevices and /devicemanagement/webapi/device/start_ota (static files)
#    and /devicemanagement/webapi for AJAX requests to the backend Rails code.
# 3) The device server, at /devicemanagement/mdm/device and/or /devicemanagement/api/device
#
# There are some other URIs which simply serve miscellaneous content directly from files in the file system.
# These are always proxied to Profile Manager's backend apache instance, with the URI rewritten as noted
#
# /MDMServiceConfig                         --> /config/MDMServiceConfig
# /devicemanagement/DEPAnchorCerts.json     --> /config/DEPAnchorCerts.json
# /devicemanagement/*.mobileconfig          --> /config/*.mobileconfig
# /devicemanagement/book/*                  --> /book/*
# /devicemanagement/ipa/*                   --> /app/*
#
# This file is used to configure the reverse proxy which listens on both ports 80 & 443.
# Connections to the Rails backend  are proxied from here directly to the "thin" instances running the Rails code.
# The PHP code *only* applies to SSL connections, so that is configured in httpd_devicemanagement_ssl.conf.
# All request for files used by Profile Manager are proxied to a backend web server running only for Profile Manager,
# which is configured in services/httpd_devicemanagement.conf.

<IfModule mod_headers.c>
	RequestHeader set x-apple-service-profile-manager-enabled true
</IfModule>

AddType application/x-apple-aspen-config .mobileconfig

RequestHeader set X_FORWARDED_PROTO 'https' env=https
RequestHeader set X_FORWARDED_PROTO 'http' env=!https

# This is needed to workaround a mod_proxy bug <https://issues.apache.org/bugzilla/show_bug.cgi?id=37770>
# SetEnvIf Request_URI "/devicemanagement/.*" force-proxy-request-1.0=1
# SetEnvIf Request_URI "/devicemanagement/.*" proxy-nokeepalive=1

RewriteEngine On
# This is needed to support case-insensitivity. It also corrects the case in the process with a redirect.
RewriteCond %{REQUEST_URI} !^/mydevices/?$
  RewriteRule ^/mydevices/?$  "/mydevices/" [NC,R=permanent]

RewriteCond %{REQUEST_URI} !^/profilemanager/?$
  RewriteRule ^/profilemanager/?$  "/profilemanager/" [NC,R=permanent]

# These redirects the browser to /profilemanager/ or /mydevices/ to keep the URL clean
RewriteRule ^/devicemanagement/webapi/device/start_ota/?$ "/mydevices/"      [NC,R=permanent]
RewriteRule ^/devicemanagement/console/admin/?$           "/profilemanager/" [NC,R=permanent]


LoadModule status_module ${MODULE_INSTALL_PATH_PREFIX}/usr/libexec/apache2/mod_status.so
ProxyPass /devicemanagement/status !
<Location /devicemanagement/status>
	SetHandler server-status
	Require all denied
	Require ip 127.0.0.1
</Location>

# Static config files
<LocationMatch "^/(MDMServiceConfig)$">
  ProxyPassMatch http://127.0.0.1:35080/config/$1.json
</LocationMatch>
<LocationMatch "^/devicemanagement/([^/]+)\.(json|mobileconfig)$">
  ProxyPassMatch http://127.0.0.1:35080/config/$1.$2
</LocationMatch>

# Static app files
<LocationMatch "^/devicemanagement/ipa/(.+)$">
  ProxyPassMatch http://127.0.0.1:35080/app/$1
</LocationMatch>

# Static book files
<LocationMatch "^/devicemanagement/book/(.+)$">
  ProxyPassMatch http://127.0.0.1:35080/book/$1
</LocationMatch>

# Static Admin files
# These are equivalent (i.e., interchangable) URI prefixes:  /profilemanager/  <=> /devicemanagement/console/admin/
<LocationMatch "^/profilemanager(/|/(.+))?$">
  ProxyPassMatch http://127.0.0.1:35080/profilemanager/admin/$2
</LocationMatch>
<LocationMatch "^/devicemanagement/console/(.+)$">
  ProxyPassMatch http://127.0.0.1:35080/profilemanager/$1
</LocationMatch>

# Static Portal files (always has a URI component after "/mydevices/")
<LocationMatch "^/mydevices/(.+)$">
  ProxyPassMatch http://127.0.0.1:35080/mydevices/$1
</LocationMatch>

<LocationMatch "^/mdm2/(.+)$">
  ProxyPassMatch http://127.0.0.1:3331/$1
</LocationMatch>

# Apache times out after 1 minute for all the requests it reverse proxies.
# But we want the timeout to be atleast 5 minutes for Admin get_updated requests.
# There is no way to configure timeouts that is specific to a ProxyPass. So we have to make
# Apache wait for 5 minutes for all the requests its proxies through.
ProxyTimeout 300

# This proxies the requests destined for the Rails processes
# This needs to be after the check for "^/mydevices/(.+)$"
<Proxy "balancer://com.apple.devicemgr.rails">
  BalancerMember http://127.0.0.1:3320
  BalancerMember http://127.0.0.1:3321
  BalancerMember http://127.0.0.1:3322
  BalancerMember http://127.0.0.1:3323
  BalancerMember http://127.0.0.1:3324
  BalancerMember http://127.0.0.1:3325
  BalancerMember http://127.0.0.1:3326
  BalancerMember http://127.0.0.1:3327
  BalancerMember http://127.0.0.1:3328
  BalancerMember http://127.0.0.1:3329
</Proxy>

<LocationMatch "^/(mydevices)/?$">
  ProxyPassMatch   balancer://com.apple.devicemgr.rails/device/start_ota
  ProxyPassReverse balancer://com.apple.devicemgr.rails/device/start_ota
</LocationMatch>

<LocationMatch "^/devicemanagement/webapi/(.+)$">
  ProxyPassMatch   balancer://com.apple.devicemgr.rails/$1
  ProxyPassReverse balancer://com.apple.devicemgr.rails/$1
</LocationMatch>
